"""Initial schema

Revision ID: 60e0e7a2ffa9
Revises: 
Create Date: 2025-04-29 13:00:59.975498

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '60e0e7a2ffa9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('height', sa.String(length=10), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('nationality', sa.String(length=50), nullable=True),
    sa.Column('college', sa.String(length=100), nullable=True),
    sa.Column('jersey_number', sa.Integer(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_players_id'), 'players', ['id'], unique=False)
    op.create_table('seasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.String(length=9), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('year')
    )
    op.create_index(op.f('ix_seasons_id'), 'seasons', ['id'], unique=False)
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('abbreviation', sa.String(length=5), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('conference', sa.String(length=50), nullable=False),
    sa.Column('division', sa.String(length=50), nullable=False),
    sa.Column('founded', sa.Integer(), nullable=False),
    sa.Column('logo', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('abbreviation'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_teams_id'), 'teams', ['id'], unique=False)
    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('home_team_id', sa.Integer(), nullable=False),
    sa.Column('away_team_id', sa.Integer(), nullable=False),
    sa.Column('home_score', sa.Integer(), nullable=True),
    sa.Column('away_score', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('pace', sa.Float(), nullable=True),
    sa.Column('possessions', sa.Integer(), nullable=True),
    sa.Column('home_rest_days', sa.Integer(), nullable=True),
    sa.Column('away_rest_days', sa.Integer(), nullable=True),
    sa.Column('referee', sa.String(length=100), nullable=True),
    sa.Column('is_back_to_back', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['away_team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['home_team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_games_id'), 'games', ['id'], unique=False)
    op.create_table('player_by_seasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('season_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('games_played', sa.Integer(), nullable=True),
    sa.Column('games_started', sa.Integer(), nullable=True),
    sa.Column('minutes_played_per_game', sa.Float(), nullable=True),
    sa.Column('points_per_game', sa.Float(), nullable=True),
    sa.Column('assists_per_game', sa.Float(), nullable=True),
    sa.Column('offensive_rebounds_per_game', sa.Float(), nullable=True),
    sa.Column('defensive_rebounds_per_game', sa.Float(), nullable=True),
    sa.Column('rebounds_per_game', sa.Float(), nullable=True),
    sa.Column('steals_per_game', sa.Float(), nullable=True),
    sa.Column('blocks_per_game', sa.Float(), nullable=True),
    sa.Column('turn_over_per_game', sa.Float(), nullable=True),
    sa.Column('personal_fouls_per_game', sa.Float(), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.Column('total_assists', sa.Integer(), nullable=True),
    sa.Column('total_offensive_rebounds', sa.Integer(), nullable=True),
    sa.Column('total_defensive_rebounds', sa.Integer(), nullable=True),
    sa.Column('total_rebounds', sa.Integer(), nullable=True),
    sa.Column('total_steals', sa.Integer(), nullable=True),
    sa.Column('total_blocks', sa.Integer(), nullable=True),
    sa.Column('total_turnovers', sa.Integer(), nullable=True),
    sa.Column('total_personal_fouls', sa.Integer(), nullable=True),
    sa.Column('field_goal_made_per_game', sa.Float(), nullable=True),
    sa.Column('field_goal_attempted_per_game', sa.Float(), nullable=True),
    sa.Column('field_goal_percentage_per_game', sa.Float(), nullable=True),
    sa.Column('three_point_made_per_game', sa.Float(), nullable=True),
    sa.Column('three_point_attempted_per_game', sa.Float(), nullable=True),
    sa.Column('three_point_percentage_per_game', sa.Float(), nullable=True),
    sa.Column('free_throw_made_per_game', sa.Float(), nullable=True),
    sa.Column('free_throw_attempted_per_game', sa.Float(), nullable=True),
    sa.Column('free_throw_percentage_per_game', sa.Float(), nullable=True),
    sa.Column('total_field_goal', sa.Integer(), nullable=True),
    sa.Column('total_field_goal_attempted', sa.Integer(), nullable=True),
    sa.Column('field_goal_percentage', sa.Float(), nullable=True),
    sa.Column('total_three_point_made', sa.Float(), nullable=True),
    sa.Column('total_three_point_attempted', sa.Float(), nullable=True),
    sa.Column('three_point_percentage', sa.Float(), nullable=True),
    sa.Column('total_free_throw_made', sa.Float(), nullable=True),
    sa.Column('total_free_throw_attempted', sa.Float(), nullable=True),
    sa.Column('free_throw_percentage', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_player_by_seasons_id'), 'player_by_seasons', ['id'], unique=False)
    op.create_table('team_by_seasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=False),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('losses', sa.Integer(), nullable=True),
    sa.Column('games_played', sa.Integer(), nullable=True),
    sa.Column('division_ranking', sa.Integer(), nullable=True),
    sa.Column('conference_ranking', sa.Integer(), nullable=True),
    sa.Column('league_ranking', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_by_seasons_id'), 'team_by_seasons', ['id'], unique=False)
    op.create_table('player_game_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('minutes_played', sa.Float(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.Column('rebounds', sa.Integer(), nullable=True),
    sa.Column('offensive_rebounds', sa.Integer(), nullable=True),
    sa.Column('defensive_rebounds', sa.Integer(), nullable=True),
    sa.Column('steals', sa.Integer(), nullable=True),
    sa.Column('blocks', sa.Integer(), nullable=True),
    sa.Column('turnovers', sa.Integer(), nullable=True),
    sa.Column('personal_fouls', sa.Integer(), nullable=True),
    sa.Column('field_goals_made', sa.Integer(), nullable=True),
    sa.Column('field_goals_attempted', sa.Integer(), nullable=True),
    sa.Column('three_pointers_made', sa.Integer(), nullable=True),
    sa.Column('three_pointers_attempted', sa.Integer(), nullable=True),
    sa.Column('free_throws_made', sa.Integer(), nullable=True),
    sa.Column('free_throws_attempted', sa.Integer(), nullable=True),
    sa.Column('efficiency', sa.Float(), nullable=True),
    sa.Column('usage_rate', sa.Float(), nullable=True),
    sa.Column('true_shooting_percentage', sa.Float(), nullable=True),
    sa.Column('plus_minus', sa.Integer(), nullable=True),
    sa.Column('on_off_rating', sa.Float(), nullable=True),
    sa.Column('clutch_points', sa.Integer(), nullable=True),
    sa.Column('clutch_field_goal_percentage', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_player_game_log_id'), 'player_game_log', ['id'], unique=False)
    op.create_table('team_game_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.Column('rebounds', sa.Integer(), nullable=True),
    sa.Column('steals', sa.Integer(), nullable=True),
    sa.Column('blocks', sa.Integer(), nullable=True),
    sa.Column('turnovers', sa.Integer(), nullable=True),
    sa.Column('personal_fouls', sa.Integer(), nullable=True),
    sa.Column('field_goals_made', sa.Integer(), nullable=True),
    sa.Column('field_goals_attempted', sa.Integer(), nullable=True),
    sa.Column('three_pointers_made', sa.Integer(), nullable=True),
    sa.Column('three_pointers_attempted', sa.Integer(), nullable=True),
    sa.Column('free_throws_made', sa.Integer(), nullable=True),
    sa.Column('free_throws_attempted', sa.Integer(), nullable=True),
    sa.Column('offensive_rating', sa.Float(), nullable=True),
    sa.Column('defensive_rating', sa.Float(), nullable=True),
    sa.Column('net_rating', sa.Float(), nullable=True),
    sa.Column('assist_to_turnover_ratio', sa.Float(), nullable=True),
    sa.Column('clutch_points', sa.Integer(), nullable=True),
    sa.Column('clutch_field_goal_percentage', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_game_log_id'), 'team_game_log', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_team_game_log_id'), table_name='team_game_log')
    op.drop_table('team_game_log')
    op.drop_index(op.f('ix_player_game_log_id'), table_name='player_game_log')
    op.drop_table('player_game_log')
    op.drop_index(op.f('ix_team_by_seasons_id'), table_name='team_by_seasons')
    op.drop_table('team_by_seasons')
    op.drop_index(op.f('ix_player_by_seasons_id'), table_name='player_by_seasons')
    op.drop_table('player_by_seasons')
    op.drop_index(op.f('ix_games_id'), table_name='games')
    op.drop_table('games')
    op.drop_index(op.f('ix_teams_id'), table_name='teams')
    op.drop_table('teams')
    op.drop_index(op.f('ix_seasons_id'), table_name='seasons')
    op.drop_table('seasons')
    op.drop_index(op.f('ix_players_id'), table_name='players')
    op.drop_table('players')
    # ### end Alembic commands ###
